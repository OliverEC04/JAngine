name: CI/CD

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
            fetch-depth: 0
            
      - name: Get version from TAG
        uses: damienaicheh/extract-version-from-tag-action@v1.0.0
      
      - name: Calculate Version
        run: |
          if [[ $NUMBER_OF_COMMITS_SINCE_TAG -gt 0 ]]
          then
            export VERSION=$MAJOR.$MINOR.$PATCH-$PRE_RELEASE+$NUMBER_OF_COMMITS_SINCE_TAG
          elif [[ -n $PRE_RELEASE ]]
          then
            export VERSION=$MAJOR.$MINOR.$PATCH-$PRE_RELEASE
          else
            export VERSION=$MAJOR.$MINOR.$PATCH
          fi
          echo "Got version '$VERSION'"
      
      - name: Setup DotNet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
          
      - name: Restore
        run: dotnet restore
      
      - name: Clean
        run: dotnet clean
      
      - name: Build
        run: dotnet build --configuration release -p:Version=$MAJOR.$MINOR.$PATCH-$PRE_RELEASE
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: JAngine-nuget
          retention-days: 7
          path: ./**/*.nupkg
  
  PublishNuget:
    - runs-on: ubuntu-latest
    - steps:
      - name: Get Build Version
        run: |
          Import-Module .\.github\GetBuildVersion.psm1
          Write-Host $Env:GITHUB_REF
          $version = GetBuildVersion -VersionString $Env:GITHUB_REF
          echo "BUILD_VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
        shell: pwsh
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.1.1
        with:
          nuget-version: 6.3.1
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: nuget restore $SOLUTION
      - name: Build
        run: dotnet build $SOLUTION --configuration $BUILD_CONFIG -p:Version=$BUILD_VERSION --no-restore
      - name: Run tests
        run: dotnet test /p:Configuration=$BUILD_CONFIG --no-restore --no-build --verbosity normal
      - name: Publish
        if: startsWith(github.ref, 'refs/heads/release')
        #run: nuget push **\*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_API_KEY}}

      #- name: Fix tags
      #  if: startsWith(github.ref, 'refs/tags/v')
